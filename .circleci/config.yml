version: 2.1

commands:
  destroy-environment:
    description: Destroy back-end and front-end cloudformation stacks given a workflow ID.
    parameters:
      # Add parameter here   
    steps:
      - run:
          name: Destroy environments
          when: on_fail
          command: |
            # Your code here
            exit 1

  revert-migrations:
    description: Revert the last migration if successfully run in the current workflow.
    parameters:
      # Add parameter here     
    steps:
      - run:
          name: Revert migrations
          # Add when this will run
          command: |
            # Curl command here to see if there was a successful migration associated with the workflow id, store result in SUCCESS variable
            SUCCESS = 1
            if(( $SUCCESS==1 )); 
            then
            #  cd ~/project/backend
            #  npm install
            #  Add revert code here. You can find this in the Getting Started section.
              exit 1
            fi
            
jobs:
  create_inventory:
    working_directory: ~/project
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout 
      - run:
          name: Install dependencies
          command: |
            yum install -y tar gzip     
      - run:
          name: Add back-end ip to ansible inventory and upload dnsname to memstash
          command: |
             echo "[web]" > .circleci/ansible/inventory.txt
             aws ec2 describe-instances \
               --filter Name=tag:aws:cloudformation:stack-name,Values=udapeopleproject-backendstack* Name=instance-state-name,Values=running \
               --query 'Reservations[*].Instances[*].PublicIpAddress' \
               --output text >> .circleci/ansible/inventory.txt
               ls -ltr
               pwd
               cat .circleci/ansible/inventory.txt
      - persist_to_workspace:
          root: ~/project
          paths: 
            - .circleci/ansible/inventory.txt
      - destroy-environment 
  
  configure_infrastructure:
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["8c:e5:41:de:cb:53:d8:4c:7c:3f:d4:22:b9:ad:ac:95"]
      - attach_workspace:
          at: ~/project
      - run:
          name: Install dependencies
          command: |
            apk add --update ansible
            apk -Uuv add groff less python py-pip
            pip install awscli
            
      - run:
          name: List files under Ansible Directory
          command: |
            cd .circleci/ansible
            ls -lrt            
      - run:
          name: Configure server
          command: |
            cd .circleci/ansible
            ansible-playbook -i inventory.txt  configure-server.yml
      - run:
          name: Configure node-exporter
          command: |
            cd .circleci/ansible
            ansible-playbook -i inventory.txt  configure-prometheus-node-exporter.yml
      - destroy-environment

workflows:
  default:
    jobs:
      - create_inventory
      - configure_infrastructure:
          requires: [create_inventory]
      
      
      
      
